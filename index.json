[{"content":"安装minikube 传送门：https://minikube.sigs.k8s.io/docs/start/\n(记得安装kubectl,可以自单独安装，也可以通过minikube下载kubectl)\n打开控制面板\n1 minikube dashboard 准备服务 服务代码 来个传统的http-server\n1 2 3 4 5 6 7 8 9 10 func rawHttpServer() { http.HandleFunc(\u0026#34;/hello\u0026#34;, func(w http.ResponseWriter, r *http.Request) { _, _ = w.Write([]byte(\u0026#34;hello world\u0026#34;)) }) if err := http.ListenAndServe(\u0026#34;:8080\u0026#34;, nil); err != nil { fmt.Println(err) os.Exit(1) } } 服务编译打包 1.编写DockerFile\n1 2 3 4 5 6 7 8 9 10 FROM golang:alpine AS builder RUN mkdir /app COPY . /app WORKDIR /app/httpdemo RUN go build -o httpdemo FROM alpine:3.18.2 WORKDIR /runtime COPY --from=builder /app/httpdemo/httpdemo /runtime/httpdemo ENTRYPOINT [\u0026#34;./httpdemo\u0026#34;] 2.打包镜像 特别注意，因为选择本地打包，在打包前需要将minikube的docker环境变量设置好\n1 2 3 4 # 此命令将minikube的docker-env在当前session中设置 eval $(minikube docker-env) # 打包httpdemo:v1 docker build -t httpdemo:v1 -f httpdemo/Dockerfile . 服务部署 1.创建Deployment(启动pod)\n因为Deployment默认是会从hub上拉镜像，因此需要将imagePullPolicy配置从ifNotPresent改为Never\n1 kubectl create deployment http-demo --image=httpdemo:v1 --image-pull-policy=Never btw, 可以通过-o选项生成当前deployment配置文件\n1 2 3 4 5 6 7 8 9 10 kubectl create deployment http-demo --image=httpdemo:v1 -o yaml # 在生成的httpdemo.yaml中修改imagePullPolicy # 重新根据配置加载deployment kubectl apply -f httpdemo.yaml 2.创建service kubernetes默认pod只能在其虚拟内网中通信, 若要和外网通信需要建立service ```shell kubectl expose deployment http-demo --type=LoadBalancer --port=8080,8081 minikube service http-demo 3.打开页面，可以正常访问服务\n","permalink":"https://excaburay.github.io/posts/%E5%9C%A8kubernetesminikube%E4%B8%8A%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1/","summary":"将本地的http服务，打包编译，并在minikube上部署运行","title":"在kubernetes(minikube)上部署自己的第一个服务"},{"content":"hugo搭建博客 hugo准备 安装 1 2 3 4 5 # mac os brew install hugo # ubuntu sudo apt-get install hugo 新建site 1 hugo new site my_blog_site 指定主题 拉取主题文件到site目录下的themes文件夹内（在此展示使用submodule的对比） 1 2 3 4 5 6 7 cd my_blog_site # 拉取ananke主题 git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke # 拉取papermode主题 git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 在配置中指明使用的主题(可以下载多个主题文件，在配置中指定哪个生效) 1 echo theme = \\\u0026#34;ananke\\\u0026#34; \u0026gt;\u0026gt; config.toml 指定内容文件 可以直接手动创建md文件，也可以使用hugo提供的如下命令创建，文件父目录代表’CATEGORY‘\n1 hugo new posts/my-first-post.md 本地运行 执行下方命令将会根据我们的文件在{content,data,layouts,static,themes}生成相应文件\n1 hugo server -D 访问http://localhost:1313/ch看效果\n编译静态网页 默认将静态网页文件生成在./public目录下\n1 hugo -D ","permalink":"https://excaburay.github.io/posts/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","summary":"xxxxxxxxxxxxxxxxxxxx","title":"hugo搭建博客"}]